{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/CreateTodo.js","images/icon-check.svg","images/icon-cross.svg","components/SingleTodo.js","components/ShowTodo.js","components/Todo.js","Data.js","images/bg-desktop-dark.jpg","images/bg-desktop-light.jpg","App.js","reportWebVitals.js","index.js"],"names":["CreateTodo","dark","setTodoData","text","setText","onKeyPress","e","key","prev","concat","checked","id","uuidv4","className","value","onChange","target","type","placeholder","SingleTodo","todoData","todoTodo","onClick","newTodoData","map","todoCheck","src","check","alt","cross","filter","todo","ShowTodo","useState","filterValue","setFilterValue","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","unqTodo","length","Todo","setDark","sun","moon","Data","App","darkBg","lightBg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1757b97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst CreateTodo = ({ dark, setTodoData, text, setText }) => {\r\n  const handleKeyPress = e => {\r\n    if (text) {\r\n      if (e.key === \"Enter\") {\r\n        setTodoData(prev => prev.concat({ checked: false, text, id: uuidv4() }));\r\n        setText(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onKeyPress={handleKeyPress} className={`creation ${dark ? \"dark\" : \"\"}`}>\r\n      <div className=\"roundUseless\"></div>\r\n      <input value={text} onChange={e => setText(e.target.value)} type=\"text\" className={`${dark ? \"dark\" : \"\"}`} placeholder=\"Create a new todo...\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTodo;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from \"react\";\r\nimport check from \"../images/icon-check.svg\";\r\nimport cross from \"../images/icon-cross.svg\";\r\n\r\nconst SingleTodo = ({ dark, todoData, todoTodo, setTodoData, id }) => {\r\n  const delTodo = () => {\r\n    setTodoData(prev => prev.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const checkTodo = () => {\r\n    const newTodoData = todoData.map(todoCheck => {\r\n      if (todoCheck.id === id) {\r\n        if (todoCheck.checked) {\r\n          return { ...todoCheck, checked: false };\r\n        } else {\r\n          return { ...todoCheck, checked: true };\r\n        }\r\n      } else {\r\n        return { ...todoCheck };\r\n      }\r\n    });\r\n\r\n    setTodoData(newTodoData);\r\n  };\r\n  return (\r\n    <div className={`singleTodo ${todoTodo.checked ? \"checked\" : \"\"}`}>\r\n      <div onClick={checkTodo} className={`checker ${todoTodo.checked ? \"checked\" : \"\"}`}>\r\n        <img src={check} alt=\"check\" />\r\n      </div>\r\n      <p className={`${dark ? \"dark\" : \"\"} ${todoTodo.checked ? \"checked\" : \"\"}`}>{todoTodo.text}</p>\r\n      <img src={cross} alt=\"cross\" className=\"cross\" onClick={delTodo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SingleTodo from \"./SingleTodo\";\r\n\r\nconst ShowTodo = ({ dark, todoData, setTodoData }) => {\r\n  const [filterValue, setFilterValue] = useState(\"all\");\r\n\r\n  // forFilterValue: Only render when component is rendered for first time\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"filterValue\")) {\r\n      setFilterValue(JSON.parse(localStorage.getItem(\"filterValue\")));\r\n    }\r\n  }, []);\r\n  // forFilterValue: render each time state changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"filterValue\", JSON.stringify(filterValue));\r\n  }, [filterValue]);\r\n\r\n  const filterData = () => {\r\n    if (filterValue === \"all\") {\r\n      return todoData;\r\n    } else if (filterValue === \"active\") {\r\n      return todoData.filter(todo => todo.checked !== true);\r\n    } else {\r\n      return todoData.filter(todo => todo.checked === true);\r\n    }\r\n  };\r\n\r\n  const uncheckCounter = () => {\r\n    return todoData.filter(unqTodo => unqTodo.checked !== true);\r\n  };\r\n\r\n  const clearCompHandler = () => {\r\n    setTodoData(prev => prev.filter(todo => !todo.checked));\r\n  };\r\n\r\n  return (\r\n    <div className={`showTodo ${dark ? \"dark\" : \"\"}`}>\r\n      <div className=\"body\">\r\n        {filterData().map(todoTodo => (\r\n          <SingleTodo\r\n            id={todoTodo.id}\r\n            todoData={todoData}\r\n            setTodoData={setTodoData}\r\n            dark={dark}\r\n            todoTodo={todoTodo}\r\n            key={todoTodo.id}\r\n          />\r\n        ))}\r\n      </div>\r\n      <footer className={dark ? \"dark\" : \"\"}>\r\n        <span className=\"left\">{uncheckCounter().length} items left</span>\r\n        <ul className={`filter ${dark ? \"dark\" : \"\"}`}>\r\n          <li\r\n            className={`${filterValue === \"all\" ? \"filterValue\" : \"\"}`}\r\n            onClick={() => setFilterValue(\"all\")}\r\n          >\r\n            All\r\n          </li>\r\n          <li\r\n            className={`${filterValue === \"active\" ? \"filterValue\" : \"\"}`}\r\n            onClick={() => setFilterValue(\"active\")}\r\n          >\r\n            Active\r\n          </li>\r\n          <li\r\n            className={`${filterValue === \"completed\" ? \"filterValue\" : \"\"}`}\r\n            onClick={() => setFilterValue(\"completed\")}\r\n          >\r\n            Completed\r\n          </li>\r\n        </ul>\r\n        <span onClick={clearCompHandler} className=\"clearComp\">\r\n          Clear Completed\r\n        </span>\r\n        <span className=\"inst\">Render List</span>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowTodo;\r\n","import React, { useState } from \"react\";\r\nimport sun from \"../images/icon-sun.svg\";\r\nimport moon from \"../images/icon-moon.svg\";\r\nimport Creation from \"./CreateTodo\";\r\nimport ShowCase from \"./ShowTodo\";\r\n\r\nconst Todo = ({ dark, setDark, todoData, setTodoData }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"actual-todo\">\r\n      <div className=\"head\">\r\n        <h1>TODO</h1>\r\n        <img src={dark ? sun : moon} alt=\"\" onClick={() => setDark(!dark)} />\r\n      </div>\r\n      <div className=\"body\">\r\n        <Creation text={text} setText={setText} todoData={todoData} setTodoData={setTodoData} dark={dark} />\r\n        <ShowCase todoData={todoData} setTodoData={setTodoData} dark={dark} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","const Data = () => {\r\n  return [];\r\n};\r\n\r\nexport default Data;\r\n","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import { useState, useEffect } from \"react\";\nimport \"./css/App.scss\";\nimport Todo from \"./components/Todo\";\nimport Data from \"./Data\";\nimport darkBg from \"./images/bg-desktop-dark.jpg\";\nimport lightBg from \"./images/bg-desktop-light.jpg\";\n\nfunction App() {\n  const [dark, setDark] = useState(false);\n  const [todoData, setTodoData] = useState(Data());\n\n  // forDark: Only render when component is rendered for first time\n  useEffect(() => {\n    if (localStorage.getItem(\"dark\")) {\n      setDark(JSON.parse(localStorage.getItem(\"dark\")));\n    }\n  }, []);\n  // forDark: render each time state changes\n  useEffect(() => {\n    localStorage.setItem(\"dark\", JSON.stringify(dark));\n  }, [dark]);\n\n  // forTodoData: Only render when component is rendered for first time\n  useEffect(() => {\n    if (localStorage.getItem(\"todoData\")) {\n      setTodoData(JSON.parse(localStorage.getItem(\"todoData\")));\n    }\n  }, []);\n  // forTodoData: render each time state changes\n  useEffect(() => {\n    localStorage.setItem(\"todoData\", JSON.stringify(todoData));\n  }, [todoData]);\n\n  return (\n    <div className={`App ${dark ? \"dark\" : \"\"}`}>\n      <img src={dark ? darkBg : lightBg} alt=\"background\" className=\"bg-img\" />\n      <Todo dark={dark} setDark={setDark} todoData={todoData} setTodoData={setTodoData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}